

Генерация текстов, кластеризация и определение E-A-T и коммерческости запросов на нейросети OpenAI (GPT-3) / Habr


               Генерация текстов, кластеризация и определение E-A-T и коммерческости запросов на нейросети OpenAI (GPT-3) Level of difficulty  
    Medium
   Reading time  
    19 min
   Views  1.2K API *Machine learning *Internet marketing *Search engine optimization *Artificial Intelligence  
    Tutorial
        Всем привет! Сегодня я хочу показать 5 примеров использования  искусственного интеллекта (ИИ) на нейросети OpenAI (GPT-3) применительно к SEO: это кластеризация поисковых запросов, определение степени коммерциализации запросов, оценка качества контента Google E-A-T, генерация статей по ключевым словам и извлечение сущностей из текста.Все это делается с регистрацией, СМС и только через VPN, но, в  отличии от классических способов, применяемых сеошниками – без  использования поисковых систем. Только OpenAI, только хардкор!Генерация статей, кластеризация и определение степени коммерческости запросов на нейросети OpenAI (GPT-3)1. Степень коммерциализации запросовКак известно, для определения степени коммерциализации запросов в классическом варианте, нам нужно пройти несколько этапов:По каждой ключевой фразе нужно получить выдачу ТОП 10-20 в двух  противоположных регионах Яндекса, например: Москва и Новосибирск.Сравнить URL из двух списков и получить процент (%) их совпадения.Для большей точности можно поискать в сниппетах коммерческие ключевые слова, типа «купить, цена, цены, стоимость» и т.п.Дополнительно, можно спарсить число объявлений в директе и на основе их количества делать уточняющие выводы.В итоге, для запросов типа «где отдохнуть в турции в сентябре», с  большой долей вероятности мы определим, что это информационный запрос,  так как выдача, скорее всего, будет одинакова в Москве и Новосибирске на  90% и более.А вот для запроса «заказать такси» при сравнении URL окажется, что  посадочные страницы будут совпадать, например, лишь на 10%, а то и вовсе  будут разными, ведь в том же Новосибирске свои, региональные сайты  заказа такси, которые будут отличаться от московских. Что дает нам  понимание, что это коммерческий запрос.Таким образом, хорошо, что у Яндекса есть регионы, а у вас много лимитов Яндекс XML  :-) И, хоть программно реализовывается все это не особо сложно, но тем  не менее трудоемко, так как нужно для одной фразы делать не один, а два  запроса к поисковой системе, тратить XML-лимиты, решать капчи и дальше  проводить дополнительные манипуляции для определения степени  коммерческости.Однако, благодаря Илону Маску,  у нас появилась возможность использования искусственного интеллекта  OpenAI, который предоставляет возможность бесплатного тестирования своих  технологий. (к слову сказать, тестовый режим ограничен $18 долларами,  которые расходуются на запросы к OpenAI. После того, как они  израсходуются, нужно будет пополнить аккаунт и в конце месяца оплатить  $18 долларов + то, что было израсходовано сверх этого)Бесплатное тестирование OpenAI (GPT-3)Еще есть такой фактор, как размер блоков для отправки и получения  результатов запроса к OpenAI, ограниченный 4096 байтами (длина  отправляемого текста + длина получаемого). Но этот нюанс оставлю на вас.  Подробнее об ограничении можно ознакомиться в статье на Stackoverflow.Определение степени коммерциализации запросовКак ни странно, написать скрипт, определяющий степень  коммерциализации при помощи OpenAI гораздо легче, нежели с  использованием поисковых систем.Все что нужно для реализации скрипта с применением OpenAI на том же PHP – это скачать с GitHub библиотеку OpenAI PHP SDK и можно сразу начинать работать с нейросетью.Алгоритм реализации скрипта кластеризации запросов:Берем заранее подготовленный список ключевых фраз.Даем задание нейросети для нашего списка слов вернуть для каждого  ключевого слова намерение поиска (информационный, транзакционный или  навигационный) и этап воронки конверсии (обнаружение, рассмотрение или  конверсия). Указать, что в каждой стоке результата будет одно ключевое  слово в формате: Ключевое слово | Намерение | Стадия.Далее происходит некая AI магия :-)После получения ответа мы формируем массив и выводим результат в табличном виде.Вуаля.Пример результата работы скрипта / Протестировать скриптОпределение степени коммерциализации запросов OpenAI (GPT-3)Пример реализации скрипта на PHP:header('Content-Type: text/html; charset=utf-8');
$api_key = 'ваш_ключ_апи';
require __DIR__.'/open-ai/vendor/autoload.php';
use Orhanerday\OpenAi\OpenAi;
$open_ai = new OpenAi($api_key);
if(isset($_POST['zaproses']))
{
	$text_lines = explode("|", $_POST['zaproses']);
}
else
{
	$f = file_get_contents($_SERVER['DOCUMENT_ROOT'].'/ai-kommerce.txt');
	$text_lines = explode("\r\n", $f);
}
$tmp_arr = array();
$table = '<br><table width="*" align="center" border="0" cellpadding="2" cellspacing="2" class="tbl" id="mass_check_dom">'."\r\n";
$table .= '<tr><td height="32" class="td_header" align="center">#</td><td height="32" class="td_header" align="center">Запрос</td><td height="32" class="td_header" align="center">Намерение</td><td height="32" class="td_header" align="center">Этап воронки конверсии</td><td height="32" class="td_header" align="center">Точность</td></tr>'."\r\n";
$i = $j = 0;
foreach ($text_lines as $key => $val)
{
	if((($key % 10 == 0) && ($key > 0)) || ($key == count($text_lines) - 1))
	{
		if($key == count($text_lines) - 1) // добавляем последний элемент массива
			$tmp_arr[] = $val;
		$s = implode(', ', $tmp_arr);
		$tmp_arr = array(); // очищаем массив
		$precis = ' | Точность цифрами';
		$prompt = "Para el siguiente listado de palabras: ".trim($s)." devuelve por cada una de las keywords la intenci