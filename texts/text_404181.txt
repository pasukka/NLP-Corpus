

Программы-собеседники: история создания, анализ работы, перспективы развития / Habr


               4  July  2017 at 20:55  Программы-собеседники: история создания, анализ работы, перспективы развития ua-hosting.company corporate blog History of IT Artificial Intelligence       Тысячелетия эволюции подарили человеку возможность вербально (и/или письменно) выражать свои мысли, обмениваться ими с другими людьми. Проще говоря, мы научились вести осознанные беседы. В наше время общение с кем-то для человека — неотъемлемая часть его жизни. Заприте человека в помещении одного, без связи с внешним миром, и Вы сразу увидите негативные результаты отсутствия возможность с кем-то поговорить. 


Для нормальной беседы человеку нужен человек. Или нет? Сможет ли машина (программа) заменить живого собеседника? Будет ли беседа с железным дровосеком такая же полная и интересная? И есть ли будущее у программ-собеседников? На эти и некоторые другие вопросы мы постараемся найти сегодня ответы.

Историческое отступление

Еще в далеком 1966 году Джозеф Вейценбаум, американский ученый и исследователь ИИ (искусственного интеллекта), создал Элизу — программу-собеседника, пародирующую психотерапевта.




Вейценбаум решил использовать модель общения пациента и психотерапевта по причине сложности данного формата общения. Дело в том, что в таком разговоре затрагиваются и описываются темы и ситуации, в которых особое значение могут иметь не одно слово, а сразу несколько. А это расходится с возможностями программы. Элиза, анализируя фразу собеседника, выделяла одно корневое слово и выдавала ответ, отталкиваясь именно от него. В то время, как смысловая нагрузка ложилась на всю фразу целиком либо на несколько слов. К примеру, человек говорит: «Я устал от бессмысленных споров», и тут Элиза концентрируется на слове устал, как на якобы основном, выдавая ответ: «Почему Вы устали?». Как Вы видите, настоящий психотерапевт рассматривал бы всю фразу целиком, анализируя не только почему пациент устал, но и что он имеет ввиду под бессмысленными спорами, когда и с кем они имели место быть и т.д. У человека на одну фразу появляется множество вариантов ответов (или же вопросов), каждый из которых является следствием концентрации аналитического внимания на то или иное слово в фразе. Также важным элементом общения является возможность его продолжения, развития. Элиза же часто не могла воспринять фразу или выделить основное слово, потому просто отвечала «I see» (Ясно, понятно, понимаю — перевод) и меняла тему разговора. Потому человек, общающийся с данной программой, уже через несколько реплик мог полностью избавится от иллюзии общения с живым человеком. 


Но Джозеф Вейценбаум был пионером в области общения человека и программы. А Элиза была первенцем данной области исследований, потому нельзя было ожидать от нее многого. Сейчас же вычислительные мощности современных компьютеров позволяют значительно расширить возможности программ-собеседников. Но где их грань? Можно ли на 100% заменить человека, как собеседника?


Было бы очень интересно почитать переписку Элизы (виртуального психоаналитика) и другой программы Parry. А все потому, что ее создатель, психиатр Кеннет Колбай, наделил ее свойствами человека с параноидальной шизофренией. При этом Parry был немного продвинутей своей предшественницы, поскольку в его программу был внедрен диалоговой алгоритм, позволявший вести более сложные и продолжительные переговоры. В 1972 году произошла встреча двух программ, которые вели беседу друг с другом посредством ARPANET.

Пример кусочка кода программы-собеседника
//
// Program Name: chatterbot1
// Description: this is a very basic example of a chatterbot program
//
// Author: Gonzales Cenelia
//
#include <iostream>
#include <string>
#include <ctime>
int main()
{
    std::string Response[] = {
        "I HEARD YOU!",
        "SO, YOU ARE TALKING TO ME.",
        "CONTINUE, I’M LISTENING.",
        "VERY INTERESTING CONVERSATION.",
        "TELL ME MORE..."
    };
    srand((unsigned) time(NULL));
    std::string sInput = "";
    std::string sResponse = "";
    while(1) {
        std::cout << ">";
        std::getline(std::cin, sInput);
        int nSelection = rand() % 5;
        sResponse = Response[nSelection];
        std::cout << sResponse << std::endl;
    }
    return 0;
}

Для тех, что желает углубится в программирование программ-собеседников я представляю ChatScript — язык, основой которого является CHAT-L, использованный в свое время создателем Rose Брюсос Уилкоксом.

