

Как генерировать стихи с помощью силлабо-тонической трансформенной языковой модели (часть первая) / Habr


              14  April   at 12:07  Как генерировать стихи с помощью силлабо-тонической трансформенной языковой модели (часть первая) SberDevices corporate blog Machine learning *Artificial Intelligence Natural Language Processing *      Всем привет! Меня зовут Илья Козиев, я работаю в Управлении экспериментальных систем машинного обучения SberDevices над вопросами генерации текстового контента. В этой статье я хочу представить эффективный способ решения такой интересной задачи, как генерация стихов, с помощью одной из самых современных нейросетевых архитектур — GPT-3. Я подробно распишу все необходимые шаги на пути к получению стихов примерно вот такого уровня:Я оставляю брошенные фразыИного смеха, слабости и слёзЯ превращаюсь в голубые стразыКружась ветвями молодых берёзЕщё пример:Люблю грозу в начале маяСедую стужу в летний знойИ солнцем землю заливаяВесна придёт в мой край роднойИли даже так, с оттенком Агнии Барто:Опять весна, и вечер наступаетИдет бычок, вздыхает на ходуИ мать кричит, и друга обнимаетИщу его, покой я не найдуМожно даже сделать продолжение стиха с заданной строчки:Мчатся тучи, вьются тучиОпускается рассветМысли пламенные жгучиИ весны тревожный следКажется, что все эти эмоции, нечёткие ассоциации и аллюзии, обёрнутые в строгую форму ритма и рифмы, не так-то просто совместить с холодной и бездушной математикой машинного обучения. По сути затронем одну из самых горячих тем в области искусственного интеллекта — машинное творчество. Кроме описания подхода, в конце будет ссылка на докер-образ с кодом и готовыми моделями для ваших экспериментов.Как насчёт ruGPT-3 и ruT5?На первый взгляд кажется, что генерация стихов мало чем отличается от генерации текста вообще. А что у нас есть хорошего для генерации текста в текущей точке пространства-времени? Конечно же, большие языковые модели GPT и T5 (а также их многочисленные родственники). Для русского языка существуют ruGPT и ruT5, выложенные в общий доступ, так что было бы странно не проанализировать их применимость для такой задачи.Кстати, поскольку в рамках описываемого подхода мы будем тренировать свою «поэтическую» GPT с нуля, будет полезно заглянуть в описание тренировки ruGPT. А для погружения в тему текстовой генерации с помощью ruGPT полезным будет заглянуть в статьи «Тестируем ruGPT-3 на новых задачах» и «Всё, что нам нужно — это генерация».Итак, модели ruGPT обучены на очень большом (десятки Гб) массиве русскоязычных текстов и хорошо знают морфологию, синтаксис и всякие нюансы словоупотребления для русского языка в текстах разных видов, включая художественную литературу, болтовню на форумах, статьи Википедии, новости. Что надо сделать, чтобы GPT начала радовать нас стихами? В нашем распоряжении три подхода.Во-первых, можно взять большую модель (Large или лучше даже XL) и применить zero-shot или few-shot подходы. Так как при начальном обучении ruGPT видела некоторое количество стихов, оба эти подхода позволят получить какой-то результат без затрат на дообучение моделей.Во-вторых, можно дообучить ruGPT целенаправленно на корпусе из стихов, чтобы увеличить шансы на получение стихотворной «годноты». Об этом подходе можно почитать в статье «Как ИИ учится литературному творчеству, или Любовные письма от тостера». Корпус стихов можно взять готовый, или наскрапить свой с сайтов поэтического самиздата, о чём я более подробно расскажу во второй части.Третий подход основан на prompt tuning’е лежит где-то между первыми двумя. С одной стороны, тут будет нужен набор обучающих примеров, так что совсем без подготовки своего корпуса тут не обойтись. Но с другой стороны, количество этих примеров может быть намного меньше, чем для настоящего файнтюна самой языковой модели, так как требуется обучить намного меньшую по размеру вспомогательную нейросетку с более простой архитектурой. Подробности и примеры данного подхода можно найти в статье «Управляем генерацией ruGPT-3: библиотека ruPrompts».Насколько хорошо работают эти подходы для генерации стихов? Увы и ах, если вы попробуете их (а я крайне рекомендую «пощупать» эти подходы своими руками!), то увидите, что получается не очень. Модели будут стараться выдавать обычную прозу, хотя и не лишенную какого-то налёта верлибра. Причина в том, что привычные нам стихи, а именно силлабо-тоническая поэзия, — это не только и не столько грамматически корректное содержание, но и определённая форма, а именно порядок чередования ударных и безударных слогов, а также фонетическое соответствие заударных окончаний последних слов в строках. Эту информацию языковая модель в ходе обучения на обычных текстах в явном виде не получает, и вывести её как правила синтаксиса из обычных текстов стихов она тоже может лишь с большим трудом и напряжением всех машинных сил. Говоря проще, модели ruGPT и ruT5 не знают ничего про позиции ударений и разбивку слов на слоги. Да, после дообучения такая модель может запомнить некоторое количество пар рифмуемых слов, но этого мало.Впрочем, иногда такая отфайнтюненная ruGPT выдаёт что-то интересное:А в небе звёздочка горит,Сияет так красиво!И на ветвях берёз шумитСвоей листвой игривоНо это будут редкие сокровища в терриконах плохо зарифмованных текстов, которые напоминают стихи только «геометрией»:Я знаю, ты не станешь смеятьсяВ этот день над моими стихами.Только белая берёза проснётсяПод моим окном, и заплачет с намиОК, раз ruGPT сама не может «в рифму», почему не подсказать ей? Можно взять словарь рифм, какую-то готовую библиотеку, или даже натренировать свою нейромодель рифмовки, чтобы сначала подбирать последнее слово для каждой строки, а стартовые фрагменты строк генерировать с помощью отфайнтюненной на стихах ruT5 и так называемых sentinel tokens. Первые две строки стиха можно генерировать просто в отфайнтюненной rugpt, хотя это ограничит нас схемой рифмовки ABAB:Заодно можно генерировать и заголовок стиха отдельной ruGPT, решая задачу «поэтической суммаризации». Да, такая немного переусложненная архитектура работает чуть лучше просто отфайнтюненной ruGPT, но мы ведь можем сделать намного лучше, да?Ключевая идея силлабо-тонической моделиКак я уже сказал, стать хорошим поэтом ruGPT мешает полное непонимание фонетики русского языка. Можем ли мы научить модель GPT русской фонетике? Да легко! Всё, что для этого нужно — выбрать правильное представление текста, чтобы в явном виде представить знания об ударных и безударных гласных. А как это сделать? Через правильную токенизацию.Оригинальная GPT (и ruGPT тоже) представляет текст как последовательность неких токенов. Количество этих токенов выбирается заранее (чуть больше 50 тысяч по сложившейся практике), и словарь формируется автоматически — так, чтобы любое слово языка представлять заранее фиксированным набором токенов. К примеру, в ruGPT самые частотные слова, наподобие «были», состоят из 1 токена, а более редкие бьются на кусочки. В результате, слово «фальшивомонетчицею» представляется цепочкой токенов «фаль | ши | вом | он | ет | чи | це | ю». Почти слоги, кстати. Фонетическая неконсистентность такого разбиения слов — проблема, от которой нам надо избавиться. Поэтому давайте бить слова явно и регулярно на нормальные слоги, чтобы, например, «были» представлялось как «бы | ли». И заодно пометим ударные слоги каким-то маркером, например стандартным юникодным символом справа от гласной:В ле|су